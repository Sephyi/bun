name: Create Release Build
run-name: Compile Bun v${{ inputs.version }} by ${{ github.actor }}

concurrency:
  group: release
  cancel-in-progress: true

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true
        description: "Release version. Example: 1.1.4. Exclude the 'v' prefix."
      tag:
        type: string
        required: true
        description: "GitHub tag to use"
      clobber:
        type: boolean
        required: false
        default: false
        description: "Overwrite existing release artifacts?"
  release:
    types:
      - created

jobs:
  windows-x64:
    name: Build windows-x64
    uses: ./.github/workflows/build-windows.yml
    secrets: inherit
    with:
      runs-on: windows
      tag: windows-x64
      arch: x64
      cpu: haswell
      canary: false
  windows-x64-baseline:
    name: Build windows-x64-baseline
    uses: ./.github/workflows/build-windows.yml
    secrets: inherit
    with:
      runs-on: windows
      tag: windows-x64-baseline
      arch: x64
      cpu: nehalem
      canary: false
  upload-artifacts:
    needs:
      - windows-x64
      - windows-x64-baseline
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: bun-releases
          pattern: bun-*
          merge-multiple: true
          github-token: ${{ github.token }}
      - name: Check for Artifacts
        run: |
          if [ ! -d "bun-releases" ] || [ -z "$(ls -A bun-releases)" ]; then
            echo "Error: No artifacts were downloaded or 'bun-releases' directory does not exist."
            exit 1  # Fail the job if the condition is met
          else
            echo "Artifacts downloaded successfully."
          fi
      - name: Send Message
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          nodetail: true
          color: "#FF0000"
          title: "Bun v${{ inputs.version }} release artifacts uploaded"
      - name: "Upload Artifacts"
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Unzip one level deep each artifact
          cd bun-releases
          for f in *.zip; do
            unzip -o $f
          done
          cd ..
          gh release upload --repo=${{ github.repository }} ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.event.release.id }} ${{ inputs.clobber && '--clobber' || '' }} bun-releases/*.zip
